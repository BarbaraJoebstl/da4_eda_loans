loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '0'] <- 'Not Available'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '1'] <- 'Debt Consolidation'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '2'] <- 'Home Improvement'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '3'] <- 'Business'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '4'] <- 'Personal Loan'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '5'] <- 'Student Use'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '6'] <- 'Auto'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '7'] <- 'Other'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '8'] <- 'Baby & Adoption'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '9'] <- 'Boat'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '10'] <- 'Cosmetic Procedure'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '11'] <- 'Engagement Ring'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '12'] <- 'Green Loans'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '13'] <- 'Household Expenses'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '14'] <- 'Large Purchases'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '15'] <- 'Medical/Dental'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '16'] <- 'Motorcycle'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '17'] <- 'RV'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '18'] <- 'Taxes'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '19'] <- 'Vacation'
loans_filtered$Category[loans_filtered$ListingCategory..numeric. == '20'] <- 'Wedding Loans'
reorder_size <- function(x) {
factor(x, levels = names(sort(table(x))))
}
ggplot(data = loans_filtered,
aes(reorder_size(Category))) +
geom_bar(colour='#24323e', fill='#02ccba')+
ggtitle("Amount of loans by category") +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))+
labs(x="", y = "Number of loans") +
coord_flip()
reorder_size <- function(x) {
factor(x, levels = names(sort(table(x))))
}
ggplot(data = subset(loans_filtered,
LoanOriginalAmount > 2500
& LoanOriginalAmount <= 9000
& Category != 'Debt Consolidation'
& Category != 'Not Available'
& Category != 'Other'),
aes(reorder_size(Category))) +
geom_bar(colour='#24323e', fill='#02ccba')+
ggtitle("Amount of loans by category without 'OTHER'") +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))+
labs(x="", y = "Number of loans") +
coord_flip()
head(loans_filtered$Occupation)
#summarize different occupations into grouped occupations----------------
loans_filtered$GroupedOccupation <- factor(loans_filtered$Occupation)
levels(loans_filtered$GroupedOccupation) <- list(
Student=c("Student - College Graduate Student",
"Student - College Senior",
"Student - Community College",
"Student - College Freshman",
"Student - College Junior",
"Student - College Sophomore",
"Student - Technical School"),
Medical_Health=c("Doctor", "Nurse's Aide",
"Nurse (RN)",
"Nurse (LPN)",
"Dentist",
"Pharmacist",
"Medical Technician",
"Psychologist"),
Sales=c("Sales - Commission",
"Sales - Retail",
"Car Dealer",
"Realtor"),
Service=c("Food Service Management",
"Food Service",
"Postal Service",
"Social Worker",
"Truck Driver",
"Bus Driver",
"Retail Management",
"Waiter/Waitress",
"Flight Attendant",
"Clerical",
"Religious",
"Clergy"),
Laborer=c("Construction",
"Laborer",
"Skilled Labor",
"Landscaping",
"Homemaker",
"Fireman",
"Executive",
"Teacher's Aide",
"Computer Programmer",
"Administrative Assistant",
"Professional",
"Accountant/CPA",
"Tradesman - Carpenter",
"Tradesman - Mechanic",
"Tradesman - Electrician",
"Tradesman - Plumber",
"Pilot - Private/Commercial"),
HigherEdJobs=c("Architect",
"Biologist",
"Engineer - Electrical",
"Engineer - Mechanical",
"Engineer - Chemical",
"Judge", "Teacher",
"Scientist",
"Professor",
"Attorney", "Analyst", "Accountant/CPA"
),
CivilService=c("Civil Service",
"Military Officer",
"Police Officer/Correction Officer",
"Military Enlisted"),
Other=c("Other", "")
)
ggplot(data=subset(loans_filtered, GroupedOccupation != 'Other' & !is.na(GroupedOccupation)), x=GroupedOccupation, aes(reorder_size(GroupedOccupation))) +
geom_bar(colour='#24323e', fill='#02ccba')+
ggtitle("Borrowers by Occupation")+
labs(x="", y = "Number of loans")+
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
ggplot(aes(x = IsBorrowerHomeowner), data = loans_filtered) +
geom_bar(color = ('#24323e'), fill = ('#02ccba'))+
ggtitle('Home owner')
summary(loans_filtered$IsBorrowerHomeowner)
ggplot(aes(x = ProsperScore), data = loans_filtered) +
geom_bar(color = ('#24323e'), fill = ('#02ccba'))+
ggtitle('Prosper score')
summary(loans_filtered$ProsperScore)
ggplot(aes(x = CreditGrade), data = loans_filtered) +
geom_bar(color = ('#24323e'), fill = ('#02ccba')) +
ggtitle('Credit grade')
ggplot(aes(x = EmploymentStatusDuration), data = loans_filtered) +
geom_histogram(color = ('#24323e'), fill = ('#02ccba')) +
ggtitle('Employment status duration in months')
ggplot(data = loans_filtered, aes(x = DebtToIncomeRatio)) +
geom_histogram(colour = '#24323e', fill = '#02ccba', binwidth = 0.005) +
xlim(0, quantile(loans_filtered$DebtToIncomeRatio, prob = 0.5, na.rm = TRUE)) +
ggtitle("Debt To Income Ratio") +
xlab("Debt to Income Ratio") +
ylab("Count")
summary(loans_filtered$loan_income_ratio)
ggplot(data = loans_filtered, aes(x = DebtToIncomeRatio)) +
geom_histogram(colour = '#24323e', fill = '#02ccba', binwidth = 0.005) +
xlim(0, quantile(loans_filtered$DebtToIncomeRatio, prob = 0.5, na.rm = TRUE)) +
ggtitle("Debt To Income Ratio") +
xlab("Debt to Income Ratio") +
ylab("Count")
summary(loans_filtered$loan_income_ratio)
ggplot(aes(x = LenderYield), data = loans_filtered) +
geom_histogram(color = ('#24323e'), fill = ('#02ccba')) +
ggtitle('Lender Yield')
ggplot(aes(x = loans_filtered$Investors, y = ..count..), data = loans_filtered) +
geom_freqpoly(aes(color = Investors), binwidth=0.1) +
scale_x_continuous(limits = c(0, 250), breaks = seq(0, 50, 250)) +
scale_y_continuous(breaks = seq(0, 750, 50))+
ylim(0, 750)+
xlim(1, 250)+
xlab('Number of Investors') +
ylab('count') +
ggtitle('Number of Investors per Loan')
qplot(x = IsBorrowerHomeowner, y = LoanOriginalAmount,
data = loans_filtered, geom = 'boxplot') +
scale_y_continuous(limits = c(1000, 20000)) +
ggtitle('Home owner by limited loan original amount')
ggplot(aes(factor(IsBorrowerHomeowner),
ProsperScore),
data = loans_filtered) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = '#02ccba')+
stat_summary(fun.y = 'mean',
geom = 'point',
color = '#24323e',
shape = 8,
size = 4)+
ggtitle('Home owner by prosper score')
summary(loans_filtered$MonthlyLoanPayment)
ggplot(aes(x=CurrentDelinquencies, y=..count../sum(..count..)), data = subset(loans_filtered, !is.na(IsBorrowerHomeowner))) +
geom_freqpoly(aes(color = IsBorrowerHomeowner)) +
xlab('CurrentDelinquencies') +
ylab('Percentage of Borrowers with current delinquencies') +
ggtitle('Current delinquencies by home owner')
#-----------------create a new DF with info about the prosper rating and the amount
creditsByGrade <- group_by(loans, ProsperRating..numeric.)
creditsByGrade <- summarise(creditsByGrade,
mean_amount = mean(LoanOriginalAmount),
median_amount = median(LoanOriginalAmount),
min_amount = min(LoanOriginalAmount),
max_amount = max(LoanOriginalAmount),
n = n())
creditsByGrade
ggplot(aes(x=BorrowerRate, y=ProsperScore), data = loans_filtered)+
geom_point(alpha = 1/5, colour = '#02ccba')+
geom_smooth()+
ggtitle("Line Plot of borrower rate and prosper score")
ggplot(aes(x = ProsperRating..numeric., y = ..count../sum(..count..)), data = subset(loans_filtered, !is.na(IncomeVerifiable))) +
geom_freqpoly(aes(color=IncomeVerifiable)) +
xlab('Prosper Rating') +
ylab('Percentage of Borrowers with that Prosper Rating')+
ggtitle("Prosper rating in percent by verifiable income")
qplot(x=CreditGrade, y=DelinquenciesLast7Years,
data=loans_filtered, geom='boxplot')+
ylim(0, 25) +
ggtitle('Current delinquencies by credit grade')
ggplot(data=subset(loans_filtered, CreditGrade != 'NC' & CreditGrade != ''  & !is.na(CreditGrade) & !is.na(EmploymentStatus) & EmploymentStatus != 'Not Available' & EmploymentStatus != 'Other' & EmploymentStatus != '')
,aes(x=CreditGrade, y=EmploymentStatus, fill=EmploymentStatus)) +
geom_bar(stat="identity")
xlab("CreditGrad") +
ylab("Employment Status") +
ggtitle('Credit grade by employment status')
ggplot(data=subset(loans_filtered, CreditGrade != 'NC' & CreditGrade != ''  & !is.na(CreditGrade) & !is.na(EmploymentStatus) & EmploymentStatus != 'Not Available' & EmploymentStatus != 'Other' & EmploymentStatus != '')
,aes(x=CreditGrade, y=EmploymentStatus, fill=EmploymentStatus)) +
geom_bar(stat="identity") +
xlab("CreditGrad") +
ylab("Employment Status") +
ggtitle('Credit grade by employment status')
ggplot(data=subset(loans_filtered, CreditGrade != 'NC' & CreditGrade != ''  & !is.na(CreditGrade) & !is.na(EmploymentStatus) & EmploymentStatus != 'Not Available' & EmploymentStatus != 'Other' & EmploymentStatus != '')
,aes(x=CreditGrade, y=EmploymentStatus, fill=EmploymentStatus)) +
geom_bar(stat="identity") +
xlab("Credit grade") +
ylab("Employment status") +
ggtitle('Credit grade by employment status')
ggplot(loans, aes(x = LenderYield, y = BorrowerRate)) +
geom_point(alpha = 1/20, colour = '#02ccba') +
scale_x_continuous(limits = c(0, quantile(loans$LenderYield, 0.75))) +
scale_y_continuous(
limits = c(0 , quantile(loans$BorrowerRate, 0.75))) +
ggtitle('Lender yield and borrower rate')
# Convert date to year ---------------------------
loans_filtered$LoanOriginationYear <- format(as.Date(loans_filtered$LoanOriginationDate, format="%Y-%m-%d"),"%Y")
ggplot(aes(x = LoanOriginationYear,
y = LoanOriginalAmount,
fill = factor(Term)),
data = loans_filtered) +
geom_boxplot()+
ggtitle("Loans by Year") +
labs(x = "Loan origination year", y = "Loan original amount")
ggplot(aes(x= factor(GroupedOccupation),
y= LoanOriginalAmount,
fill =IsBorrowerHomeowner),
data = subset(loans_filtered, !is.na(GroupedOccupation) & (GroupedOccupation != 'Other'))) +
theme(axis.text.x = element_text(angle=45,hjust=0.5,vjust=0.5))+
geom_boxplot( alpha = .5 ) +
ggtitle("Loan amount by grouped occupation and homeowner status")
ggplot(aes(x = LoanOriginalAmount, fill = LoanStatus), data = loans_filtered) +
facet_wrap(~Term) +
geom_histogram(aes(color = LoanStatus)) +
scale_fill_brewer(type = 'qual') +
ggtitle("Histogram of loan Amounts by status and terms")
ggplot(aes(x = BorrowerRate, y = Investors), data=loans_filtered) +
geom_point(aes(color=LenderYield))+
ylim(0, 600)+
ggtitle('Lender yield by number of investors')
ggplot(aes(x = Term, y = LoanOriginalAmount), data = loans_filtered) +
facet_wrap(~GroupedOccupation) +
geom_point(aes(color = Category)) +
scale_y_continuous(limits = c(1000, 5000)) +
ggtitle('Loan amount by term, grouped by grouped occupation and category')
ggplot(aes(x = Term, y = LoanOriginalAmount), data = loans_filtered) +
facet_wrap(~GroupedOccupation) +
geom_point(aes(color = Category)) +
scale_y_continuous(limits = c(1000, 5000)) +
ggtitle('Loan amount by term, grouped by grouped occupation and category')
ggplot(aes(EstimatedReturn, EstimatedLoss),
data=subset(loans_filtered, GroupedOccupation != 'Other'
& !is.na(GroupedOccupation)
& !is.na(IncomeRange)
& IncomeRange != 'Not displayed'
& IncomeRange != 'Not employed'))+
geom_point(aes(size=IncomeRange, colour=GroupedOccupation))+
ggtitle('Estimated loss and estimated return by income range of borrower')
plot1 <- ggplot(aes(EstimatedReturn, EstimatedLoss),
data=subset(loans_filtered, GroupedOccupation != 'Other'
& !is.na(GroupedOccupation)
& !is.na(IncomeRange)
& IncomeRange != 'Not displayed'
& IncomeRange != 'Not employed'))+
geom_point(aes(colour=GroupedOccupation))+
ggtitle('Estimated loss and estimated return by grouped occupation')
plot2 <-  ggplot(aes(EstimatedReturn, EstimatedLoss),
data=subset(loans_filtered, GroupedOccupation != 'Other'
& !is.na(GroupedOccupation)
& !is.na(IncomeRange)
& IncomeRange != 'Not displayed'
& IncomeRange != 'Not employed'))+
geom_point(aes(colour=IncomeRange))+
ggtitle('Estimated loss and estimated return by income range of borrower')
grid.arrange(plot1, plot2, ncol=2)
ggplot(aes(EstimatedReturn, EstimatedLoss),
data=subset(loans_filtered, GroupedOccupation == 'Student'
& !is.na(GroupedOccupation)
& !is.na(IncomeRange)
& IncomeRange != 'Not displayed'
& IncomeRange != 'Not employed'))+
geom_point(aes(colour=IncomeRange, size=IncomeRange))+
ggtitle('Estimated loss and estimated return by income range of students')
ggplot(loans_filtered, aes(LP_CustomerPayments, LP_InterestandFees)) +
geom_point(aes(colour =LP_ServiceFees), size = 1) +
coord_equal()+
ggtitle('LP_InterestandFees and LP_CustomerPayments by LP_ServiceFees')
ggplot(data = loans_filtered, aes(x = Category, y = GroupedOccupation)) +
geom_tile(aes(fill = LoanOriginalAmount)) +
theme(axis.text.x=element_text(angle=60,hjust=1,vjust=0.9)) +
ggtitle('Loans by Occupation and Category')
ggplot(aes(x= factor(GroupedOccupation),
y= LoanOriginalAmount,
fill =IsBorrowerHomeowner),
data = subset(loans_filtered, !is.na(GroupedOccupation) & (GroupedOccupation != 'Other'))) +
theme(axis.text.x = element_text(angle=45,hjust=0.5,vjust=0.5))+
geom_boxplot( alpha = 0.5 )
ggplot(aes(x = LoanOriginalAmount, fill = LoanStatus), data = loans_filtered) +
facet_wrap(~Term) +
geom_histogram(aes(color = LoanStatus)) +
scale_fill_brewer(type = 'qual') +
theme(axis.text.x = element_text(angle=45,hjust=0.5,vjust=0.5))+
ggtitle("Histogram of loan Amounts by status and terms")
ggplot(aes(EstimatedReturn, EstimatedLoss),
data=subset(loans_filtered, GroupedOccupation == 'Student'
& !is.na(GroupedOccupation)
& !is.na(IncomeRange)
& IncomeRange != 'Not displayed'
& IncomeRange != 'Not employed'))+
geom_point(aes(colour=IncomeRange, size=IncomeRange))+
ggtitle('Estimated loss and estimated return by income range of students')
ggplot(data = loans_filtered, aes(x = Category, y = GroupedOccupation)) +
geom_tile(aes(fill = LoanOriginalAmount)) +
theme(axis.text.x=element_text(angle=60,hjust=1,vjust=0.9)) +
ggtitle('Loans by Occupation and Category')
ggplot(aes(x = LoanOriginalAmount, fill = LoanStatus), data = loans_filtered) +
facet_wrap(~Term) +
geom_histogram(aes(color = LoanStatus)) +
scale_fill_brewer(type = 'qual') +
theme(axis.text.x = element_text(angle=45,hjust=0.5,vjust=0.5))+
ggtitle("Histogram of loan Amounts by status and terms")
ggplot(aes(EstimatedReturn, EstimatedLoss),
data=subset(loans_filtered, GroupedOccupation == 'Student'
& !is.na(GroupedOccupation)
& !is.na(IncomeRange)
& IncomeRange != 'Not displayed'
& IncomeRange != 'Not employed'))+
geom_point(aes(colour=IncomeRange, size=IncomeRange))+
ggtitle('Estimated loss and estimated return by income range of students')
ggplot(aes(x = LoanOriginalAmount, fill = LoanStatus), data = loans_filtered) +
facet_wrap(~Term) +
geom_histogram(aes(color = LoanStatus)) +
scale_fill_brewer(type = 'qual') +
theme(axis.text.x = element_text(angle=45,hjust=0.5,vjust=0.5))+
ggtitle("Histogram of loan Amounts by status and terms")
ggplot(aes(x= factor(GroupedOccupation),
y= LoanOriginalAmount,
fill =IsBorrowerHomeowner),
data = subset(loans_filtered, !is.na(GroupedOccupation) & (GroupedOccupation != 'Other'))) +
theme(axis.text.x = element_text(angle=45,hjust=0.5,vjust=0.5))+
geom_boxplot( alpha = 0.5 )
library(ggplot2)
library(gridExtra)
library(dplyr)
knit_with_parameters('~/Documents/GitRepos/da4_eda_loans/da4_eda_loans.rmd')
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress'))
install.packages('RWordPress', repos = 'http://www.omegahat.org/R', type = 'source')
library(RWordPress)
library(ggplot2)
library(gridExtra)
library(dplyr)
install.packages('RWordPress')
if (!require('RWordPress'))
install.packages('RWordPress', repos = 'http://www.omegahat.org/R', type = 'source')
library(RWordPress)
library(ggplot2)
library(gridExtra)
library(dplyr)
install.packages('RWordPress', repos = 'http://www.omegahat.org/R', type = 'source')
library(knitr)
library(RWordPress)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(ggplot2)
library(gridExtra)
library(dplyr)
#if (!require('RWordPress')) {
#devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
#}
install.packages(RWordPress)
library(RWordPress)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(ggplot2)
library(gridExtra)
library(dplyr)
#install.packages(devtools)
library(devtools)
library(ggplot2)
library(gridExtra)
library(dplyr)
install.packages(devtools)
library(devtools)
library(ggplot2)
library(gridExtra)
library(dplyr)
install.packages(devtools)
library(devtools)
library(ggplot2)
library(gridExtra)
library(dplyr)
install.packages("devtools")
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'https://tschebee.net/eda-of-prosper-loan-data/')
library(knitr)
knit2wp('RMarkdownWordpressTemplate.rmd', title = 'Your post title', publish = FALSE, upload = TRUE)
library(ggplot2)
library(gridExtra)
library(dplyr)
install.packages("devtools")
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'https://tschebee.net/')
library(knitr)
knit2wp('RMarkdownWordpressTemplate.rmd', title = 'Your post title', publish = FALSE, upload = TRUE)
install.packages("devtools")
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'https://tschebee.net')
library(knitr)
knit2wp('RMarkdownWordpressTemplate.rmd', title = 'Your post title', publish = FALSE, upload = TRUE)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'https://tschebee.net')
library(knitr)
knit2wp('da4_eda_loans.rmd', title = 'Your post title', publish = FALSE, upload = TRUE)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'http://tschebee.net')
library(knitr)
knit2wp('da4_eda_loans.rmd', title = 'EDA for Loan Data', publish = FALSE, upload = TRUE)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'https://tschebee.net/xmlrpc.php')
library(knitr)
knit2wp('da4_eda_loans.rmd', title = 'EDA for Loan Data', publish = FALSE, upload = TRUE)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'https://tschebee.net/xmlrpc.php')
library(knitr)
knit2wp('da4_eda_loans.rmd', title = 'EDA for Loan Data', publish = FALSE, upload = FALSE)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="BS6ZvCZSBa$o3kgGT9euuXTF"),
WordpressURL = 'https://tschebee.net/xmlrpc.php')
library(knitr)
knit2wp('da4_eda_loans.rmd', title = 'EDA for Loan Data', publish = TRUE, upload = TRUE)
library(ggplot2)
library(gridExtra)
library(dplyr)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(RWordPress)
options(WordpressLogin = c(tschebee="kvzE1krkFNpv6AzNzNiC18eJ"),
WordpressURL = 'https://tschebee.net/xmlrpc.php')
library(knitr)
knit2wp('da4_eda_loans.rmd', title = 'EDA for Loan Data', publish = TRUE, upload = TRUE)
yes
